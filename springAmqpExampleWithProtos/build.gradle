buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
    	mavenCentral()
  	}
  	dependencies {
    	classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    	classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  	}
}

apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'com.google.protobuf'

jar {
	baseName = 'springAmqpExampleWithProtos'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


springBoot {
    mainClass = 'org.sugathan.springAmqpExampleWithProtos.SpringAmqpExampleApplication'
}

repositories {
  mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-amqp')
  	compile 'com.google.protobuf:protobuf-java:3.0.0'
  	compile 'io.grpc:grpc-stub:1.0.0-pre2'
  	compile 'io.grpc:grpc-protobuf:1.0.0-pre2'
  	// Extra proto source files besides the ones residing under
  	// "src/main".
  	protobuf files("lib/protos.tar.gz")
  	protobuf fileTree("ext/")

  	testCompile 'junit:junit:4.12'
  	// Extra proto source files for test besides the ones residing under
  	// "src/test".
  	testProtobuf files("lib/protos-test.tar.gz")
}

protobuf {
  protoc {
    // The artifact spec for the Protobuf Compiler
    artifact = 'com.google.protobuf:protoc:3.0.0'
  }
  plugins {
    // Optional: an artifact spec for a protoc plugin, with "grpc" as
    // the identifier, which can be referred to in the "plugins"
    // container of the "generateProtoTasks" closure.
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.0.0-pre2'
    }
  }
  generateProtoTasks {
    ofSourceSet('main')*.plugins {
      // Apply the "grpc" plugin whose spec is defined above, without
      // options.  Note the braces cannot be omitted, otherwise the
      // plugin will not be added. This is because of the implicit way
      // NamedDomainObjectContainer binds the methods.
      grpc { }
    }
  }
}